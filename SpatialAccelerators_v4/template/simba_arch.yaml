architecture:
  version: 0.4 # Timeloop 配置文件的版本号
  nodes: # 架构组件列表，定义了整个硬件的层次结构和功能
  
  # --- 顶层系统 ---
  - !Container # 这是一个容器节点，用于分组或定义空间阵列。
    name: System
    attributes:
      datawidth: 8 # 默认数据位宽为 8 bit
      technology: "45nm" # 硬件技术节点为 45nm
  
  # --- 外部存储器 (DRAM) ---
  - !Component # 这是一个基本组件，定义一个可计算成本的单元。
    name: DRAM
    class: DRAM # 类别：DRAM (主存)
    attributes:
      type: "LPDDR4"
      width: 64 # DRAM 位宽（数据总线宽度）
      datawidth: 8 # 数据的位宽
  
  # --- 片上全局缓冲区 (GlobalBuffer) ---
  - !Component # 全局缓冲区 (L2/L3 缓存级别)
    name: GlobalBuffer
    class: smartbuffer_SRAM # 类别：SRAM 智能缓冲区
    attributes:
      depth: 2048 # 存储器深度（行数）
      width: 256 # 存储器位宽（每行多少位）
      datawidth: 8
      n_banks: 4 # 存储体数量
      nports: 2 # 端口数量
    constraints:
      # 数据空间约束：Inputs 和 Outputs 在这里停留 (keep)，Weights 跳过 (bypass)
      dataspace: {keep: [Inputs, Outputs], bypass: [Weights]} 
  
  # --- 处理器阵列 (PE Array) ---
  - !Container # 这是一个容器节点，定义一个处理元件 (PE) 的空间阵列。
    name: PE
    spatial: {meshX: 16} # 定义一个 1D 阵列，包含 16 个 PE 沿 X 轴分布
    constraints:
      # 空间映射约束：所有循环维度 (R, S, P, Q, N) 都因子为 1，即不进行空间并行化
      # except M (Output Channel) and C (Input Channel) which are not listed here.
      # 此处 M (或 K/Output Channel) 是主要空间维度，但未在 factors 中列出
      spatial: {factors: R=1 S=1 P=1 Q=1 N=1, permutation: [M, C, R, S, P, Q, N]} 
  
  # --- PE 输入缓冲区 ---
  - !Component # PE 级别的输入缓冲区 (L1 缓存级别)
    name: PEInputBuffer
    class: storage
    subclass: smartbuffer_RF # 类别：寄存器文件 (RF)
    attributes:
      depth: 8192
      width: 64
      datawidth: 8
    constraints:
      # 数据空间约束：只存储 Inputs
      dataspace: {keep: [Inputs], bypass: [Weights, Outputs]}
  
  # --- 分布式缓冲区容器 ---
  - !Container # 这是一个容器，用于定义权重通道的分布
    name: distributed_buffers
    spatial: {meshY: 4} # 定义一个 1D 阵列，包含 4 个分布式缓冲区沿 Y 轴分布
    constraints:
      # 空间映射约束：所有维度因子为 1，这意味着主要空间并行维度是 M (Output Channel)
      spatial: {factors: P=1 Q=1 R=1 S=1 C=1 N=1, permutation: [M, C, Q, R, S, P, N]}
  
  # --- 权重/累加器缓冲区 ---
  - !Parallel # 定义一组并行工作的组件 (它们共享一个父级，但内部并行)
    nodes:
    - !Component # 权重缓冲区
      name: PEWeightBuffer
      class: storage
      subclass: smartbuffer_RF
      attributes:
        depth: 4096
        width: 64
        datawidth: 8
        n_banks: 8
      constraints:
        # 数据空间约束：只存储 Weights
        dataspace: {keep: [Weights], bypass: [Inputs, Outputs]}
  
    - !Component # 累加器缓冲区
      name: PEAccuBuffer
      class: storage
      subclass: smartbuffer_RF
      attributes:
        depth: 128
        datawidth: 24 # 24 bit 累加位宽 (用于高精度累加)
        width: 24
      constraints:
        # 数据空间约束：只存储 Outputs (用于累加)
        dataspace: {keep: [Outputs], bypass: [Inputs, Weights]}
  
    - !Nothing {constraints: {dataspace: {keep: [Inputs]}}} # 一个空组件，可能用于占位或定义隐式连接/数据流
  
  # --- 寄存器/MAC 容器 ---
  - !Container # 定义另一个容器，可能代表更细粒度的空间阵列
    name: reg_mac
    spatial: {meshY: 4} # 4x 的空间复制
    constraints:
      # 空间映射约束：因子为 1，C (Input Channel) 可能是主要的空间并行维度
      spatial: {factors: P=1 Q=1 R=1 S=1 M=1 N=1, permutation: [C, M, Q, R, S, P, N]}
  
  # --- 权重寄存器 ---
  - !Component # 最低级的权重寄存器 (MAC 单元输入)
    name: PEWeightRegs
    class: storage
    subclass: smartbuffer_RF
    attributes:
      depth: 1 # 深度为 1，表示它是寄存器
      width: 512 # 512 位宽
      cluster_size: 64 # 簇大小 64，可能表示 64 个寄存器
      num_ports: 2
      datawidth: 8
    constraints:
      # 数据空间约束：只存储 Weights
      dataspace: {keep: [Weights], bypass: [Inputs, Outputs]}
  
  # --- 计算单元 (MAC) ---
  - !Component # 乘法累加单元
    name: mac
    class: intmac # 类别：整数 MAC 单元
    attributes:
      multiplier_width: 8 # 乘数位宽 8 bit
      adder_width: 16 # 加法器位宽 16 bit